# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GIThub actions Maven build example
# Environmental Variables
env:
  STACK: Java
  BUILD_TECH: java_maven
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0
  
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      -master
      -main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    #Code Checkout#
    
    - name: ' Checkout repository on branch: ${{ github.REF }}'
      uses: actions/checkout@v2
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        ref: ${{ github.REF }}
        fetch-depth: 0
      
    - name: Step 2 - Set up JDK 11
      id: setup_jdk
      if: ${{env.STACK == 'java'}}
      uses: actions/setup-java@v2
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        
    - name: Step 3 - Build with Maven
      id: build_maven
      if: ${{ env.BUILD_TECH == 'java_maven' }}
      run: mvn -B package --file ./java-hello-world-with-maven-master/pom.xml
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      
    - name: step 4 - unit test
      run: mvn -B test --file ./java-hello-world-with-maven-master/pom.xml
    
    - name: publish artifact
      uses: actions/upload-artifact@v2
      with :
        name: Artifact
        path: target/*.jar
    
